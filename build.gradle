buildscript {
    ext.kotlin_version = "1.3.72"
    ext.tornadofx_version = "1.7.20"

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.openjfx:javafx-plugin:0.0.8"
        classpath "com.github.ben-manes:gradle-versions-plugin:0.28.0"
        classpath "no.tornado:fxlauncher-gradle-plugin:1.0.21.1"
    }
}

apply plugin: "kotlin"
apply plugin: "application"
apply plugin: "org.openjfx.javafxplugin"
apply plugin: "com.github.ben-manes.versions"
apply plugin: "no.tornado.fxlauncher"

javafx {
    version = "14.0.1"
    modules = ['javafx.controls', 'javafx.graphics']
    //configuration = 'compileOnly'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots/"
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    compile "no.tornado:tornadofx:$tornadofx_version"
    compile "eu.hansolo:tilesfx:11.32"
    compile "eu.hansolo:Medusa:11.5"
    compile "eu.hansolo:regulators:1.6.2"
    compile "org.kordamp.ikonli:ikonli-javafx:11.4.0"
    compile "org.kordamp.ikonli:ikonli-material-pack:11.4.0"
    compile "org.kordamp.ikonli:ikonli-materialdesign-pack:11.4.0"
    compile "org.kordamp.ikonli:ikonli-weathericons-pack:11.4.0"
    compile "org.kordamp.ikonli:ikonli-fontawesome-pack:11.4.0"
    compile 'com.dorkbox:SystemTray:3.17'
    compile 'net.java.dev.jna:jna:5.5.0'
    compile 'net.java.dev.jna:jna-platform:5.5.0'
    //compile 'org.slf4j:slf4j-api:1.7.26'
    //compile 'org.slf4j:slf4j-log4j12:1.7.26'
}

mainClassName = "com.example.demo.app.MyApp"

jar {
    manifest {
        attributes(
                "Class-Path": configurations.compile.collect { it.getName() }.join(" "),
                "Main-Class": mainClassName,
                "Application-Name": "Test"
        )
    }
    from(configurations.compile.collect { entry -> zipTree(entry) }) {
        exclude "META-INF/MANIFEST.MF"
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
}

fxlauncher {
    applicationVendor 'My Company'
    applicationUrl 'http://host/path'
    applicationMainClass 'com.example.Application'
    deployTarget 'username@hostname:path'
}

//compileJava.options.fork = true
//compileJava.options.forkOptions.executable = "C:/Users/alexx/.jdks/openjdk-14.0.1/bin/"