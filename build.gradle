buildscript {
    ext.kotlin_version = "1.3.70"
    ext.tornadofx_version = "1.7.20"
    ext.junit_version = "5.1.0"

    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.junit.platform:junit-platform-gradle-plugin:1.1.0"
        classpath "org.openjfx:javafx-plugin:0.0.8"
    }
}

apply plugin: "kotlin"
apply plugin: "application"
apply plugin: "org.junit.platform.gradle.plugin"
apply plugin: "org.openjfx.javafxplugin"

javafx {
    version = "14.0.1"
    modules = ['javafx.controls', 'javafx.graphics','javafx.web']
    //configuration = 'compileOnly'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots/"
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    compile "no.tornado:tornadofx:$tornadofx_version"
    compile "eu.hansolo:tilesfx:+"
    compile "eu.hansolo:Medusa:+"
    compile "eu.hansolo:regulators:+"
    compile "org.kordamp.ikonli:ikonli-javafx:2.4.0"
    compile "org.kordamp.ikonli:ikonli-material-pack:2.4.0"
    compile "org.kordamp.ikonli:ikonli-materialdesign-pack:2.4.0"
    compile "org.kordamp.ikonli:ikonli-weathericons-pack:2.4.0"

    testCompile "org.junit.jupiter:junit-jupiter-api:$junit_version"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:$junit_version"
}

mainClassName = "com.example.demo.app.MyApp"

jar {
    manifest {
        attributes(
                "Class-Path": configurations.compile.collect { it.getName() }.join(" "),
                "Main-Class": mainClassName
        )
    }
    from(configurations.compile.collect { entry -> zipTree(entry) }) {
        exclude "META-INF/MANIFEST.MF"
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
}

compileJava.options.fork = true
compileJava.options.forkOptions.executable = "C:/Users/alexx/.jdks/openjdk-14.0.1/bin/"